openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
security:
  - OAuth2ClientCredentials: [admin, client]
components:
  securitySchemes:
    OAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://example.com/oauth2/token
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
paths:
  /users:
    get:
      summary: Get a list of users (Client role)
      security:
        - OAuth2ClientCredentials: [client]
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        500:
          description: Internal Server Error
    post:
      summary: Create a new user (Admin role)
      security:
        - OAuth2ClientCredentials: [admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: john_doe
                email:
                  type: string
                  example: john@example.com
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    get:
        summary: Get a user by ID (Client role)
        security:
          - OAuth2ClientCredentials: [client]
        responses:
          200:
            description: User retrieved successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          404:
            description: User not found
          500:
            description: Internal Server Error
    put:
        summary: Update a user by ID (Admin role)
        security:
          - OAuth2ClientCredentials: [admin]
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
        responses:
          200:
            description: User updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          400:
            description: Bad Request
          404:
            description: User not found
          500:
            description: Internal Server Error
    delete:
        summary: Delete a user by ID (Admin role)
        security:
          - OAuth2ClientCredentials: [admin]
        responses:
          204:
            description: User deleted successfully
          404:
            description: User not found
          500:
            description: Internal Server Error
